//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_items_categories", "category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GiftRegViewModel.category), "item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.item), true)]
[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_Group_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftRegViewModel.user), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.Group), true)]
[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_GroupMembership_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftRegViewModel.Group), "GroupMembership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.GroupMembership), true)]
[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_GroupMembership_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftRegViewModel.user), "GroupMembership", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.GroupMembership), true)]
[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_item_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftRegViewModel.user), "item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.item), true)]
[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_items_ranks", "rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftRegViewModel.rank), "item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.item), true)]
[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_Reservation_item", "item", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftRegViewModel.item), "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.Reservation), true)]
[assembly: EdmRelationshipAttribute("GiftRegModel", "FK_Reservation_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GiftRegViewModel.user), "Reservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GiftRegViewModel.Reservation), true)]

#endregion

namespace GiftRegViewModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GiftRegEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GiftRegEntities object using the connection string found in the 'GiftRegEntities' section of the application configuration file.
        /// </summary>
        public GiftRegEntities() : base("name=GiftRegEntities", "GiftRegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GiftRegEntities object.
        /// </summary>
        public GiftRegEntities(string connectionString) : base(connectionString, "GiftRegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GiftRegEntities object.
        /// </summary>
        public GiftRegEntities(EntityConnection connection) : base(connection, "GiftRegEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<category> categories
        {
            get
            {
                if ((_categories == null))
                {
                    _categories = base.CreateObjectSet<category>("categories");
                }
                return _categories;
            }
        }
        private ObjectSet<category> _categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupMembership> GroupMemberships
        {
            get
            {
                if ((_GroupMemberships == null))
                {
                    _GroupMemberships = base.CreateObjectSet<GroupMembership>("GroupMemberships");
                }
                return _GroupMemberships;
            }
        }
        private ObjectSet<GroupMembership> _GroupMemberships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<item> items
        {
            get
            {
                if ((_items == null))
                {
                    _items = base.CreateObjectSet<item>("items");
                }
                return _items;
            }
        }
        private ObjectSet<item> _items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rank> ranks
        {
            get
            {
                if ((_ranks == null))
                {
                    _ranks = base.CreateObjectSet<rank>("ranks");
                }
                return _ranks;
            }
        }
        private ObjectSet<rank> _ranks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reservation> Reservations
        {
            get
            {
                if ((_Reservations == null))
                {
                    _Reservations = base.CreateObjectSet<Reservation>("Reservations");
                }
                return _Reservations;
            }
        }
        private ObjectSet<Reservation> _Reservations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocategories(category category)
        {
            base.AddObject("categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupMemberships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupMemberships(GroupMembership groupMembership)
        {
            base.AddObject("GroupMemberships", groupMembership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToitems(item item)
        {
            base.AddObject("items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ranks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToranks(rank rank)
        {
            base.AddObject("ranks", rank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Reservations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReservations(Reservation reservation)
        {
            base.AddObject("Reservations", reservation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftRegModel", Name="category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new category object.
        /// </summary>
        /// <param name="categoryid">Initial value of the categoryid property.</param>
        /// <param name="category1">Initial value of the category1 property.</param>
        public static category Createcategory(global::System.Int32 categoryid, global::System.String category1)
        {
            category category = new category();
            category.categoryid = categoryid;
            category.category1 = category1;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 categoryid
        {
            get
            {
                return _categoryid;
            }
            set
            {
                if (_categoryid != value)
                {
                    OncategoryidChanging(value);
                    ReportPropertyChanging("categoryid");
                    _categoryid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("categoryid");
                    OncategoryidChanged();
                }
            }
        }
        private global::System.Int32 _categoryid;
        partial void OncategoryidChanging(global::System.Int32 value);
        partial void OncategoryidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String category1
        {
            get
            {
                return _category1;
            }
            set
            {
                Oncategory1Changing(value);
                ReportPropertyChanging("category1");
                _category1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("category1");
                Oncategory1Changed();
            }
        }
        private global::System.String _category1;
        partial void Oncategory1Changing(global::System.String value);
        partial void Oncategory1Changed();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_items_categories", "item")]
        public EntityCollection<item> items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<item>("GiftRegModel.FK_items_categories", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<item>("GiftRegModel.FK_items_categories", "item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftRegModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupId">Initial value of the groupId property.</param>
        /// <param name="groupName">Initial value of the groupName property.</param>
        /// <param name="ownerUserId">Initial value of the ownerUserId property.</param>
        /// <param name="private">Initial value of the private property.</param>
        public static Group CreateGroup(global::System.Int32 groupId, global::System.String groupName, global::System.Int32 ownerUserId, global::System.Boolean @private)
        {
            Group group = new Group();
            group.groupId = groupId;
            group.groupName = groupName;
            group.ownerUserId = ownerUserId;
            group.@private = @private;
            return group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 groupId
        {
            get
            {
                return _groupId;
            }
            set
            {
                if (_groupId != value)
                {
                    OngroupIdChanging(value);
                    ReportPropertyChanging("groupId");
                    _groupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("groupId");
                    OngroupIdChanged();
                }
            }
        }
        private global::System.Int32 _groupId;
        partial void OngroupIdChanging(global::System.Int32 value);
        partial void OngroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String groupName
        {
            get
            {
                return _groupName;
            }
            set
            {
                OngroupNameChanging(value);
                ReportPropertyChanging("groupName");
                _groupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("groupName");
                OngroupNameChanged();
            }
        }
        private global::System.String _groupName;
        partial void OngroupNameChanging(global::System.String value);
        partial void OngroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ownerUserId
        {
            get
            {
                return _ownerUserId;
            }
            set
            {
                OnownerUserIdChanging(value);
                ReportPropertyChanging("ownerUserId");
                _ownerUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ownerUserId");
                OnownerUserIdChanged();
            }
        }
        private global::System.Int32 _ownerUserId;
        partial void OnownerUserIdChanging(global::System.Int32 value);
        partial void OnownerUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean @private
        {
            get
            {
                return _private;
            }
            set
            {
                OnprivateChanging(value);
                ReportPropertyChanging("private");
                _private = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("private");
                OnprivateChanged();
            }
        }
        private global::System.Boolean _private;
        partial void OnprivateChanging(global::System.Boolean value);
        partial void OnprivateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_Group_user", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_Group_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_Group_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_Group_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("GiftRegModel.FK_Group_user", "user", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_GroupMembership_Group", "GroupMembership")]
        public EntityCollection<GroupMembership> GroupMemberships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMembership>("GiftRegModel.FK_GroupMembership_Group", "GroupMembership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMembership>("GiftRegModel.FK_GroupMembership_Group", "GroupMembership", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftRegModel", Name="GroupMembership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupMembership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupMembership object.
        /// </summary>
        /// <param name="groupId">Initial value of the groupId property.</param>
        /// <param name="groupMembershipId">Initial value of the groupMembershipId property.</param>
        /// <param name="userId">Initial value of the userId property.</param>
        public static GroupMembership CreateGroupMembership(global::System.Int32 groupId, global::System.Int32 groupMembershipId, global::System.Int32 userId)
        {
            GroupMembership groupMembership = new GroupMembership();
            groupMembership.groupId = groupId;
            groupMembership.groupMembershipId = groupMembershipId;
            groupMembership.userId = userId;
            return groupMembership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 groupId
        {
            get
            {
                return _groupId;
            }
            set
            {
                OngroupIdChanging(value);
                ReportPropertyChanging("groupId");
                _groupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("groupId");
                OngroupIdChanged();
            }
        }
        private global::System.Int32 _groupId;
        partial void OngroupIdChanging(global::System.Int32 value);
        partial void OngroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 groupMembershipId
        {
            get
            {
                return _groupMembershipId;
            }
            set
            {
                if (_groupMembershipId != value)
                {
                    OngroupMembershipIdChanging(value);
                    ReportPropertyChanging("groupMembershipId");
                    _groupMembershipId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("groupMembershipId");
                    OngroupMembershipIdChanged();
                }
            }
        }
        private global::System.Int32 _groupMembershipId;
        partial void OngroupMembershipIdChanging(global::System.Int32 value);
        partial void OngroupMembershipIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userId
        {
            get
            {
                return _userId;
            }
            set
            {
                OnuserIdChanging(value);
                ReportPropertyChanging("userId");
                _userId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userId");
                OnuserIdChanged();
            }
        }
        private global::System.Int32 _userId;
        partial void OnuserIdChanging(global::System.Int32 value);
        partial void OnuserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_GroupMembership_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("GiftRegModel.FK_GroupMembership_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("GiftRegModel.FK_GroupMembership_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("GiftRegModel.FK_GroupMembership_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("GiftRegModel.FK_GroupMembership_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_GroupMembership_user", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_GroupMembership_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_GroupMembership_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_GroupMembership_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("GiftRegModel.FK_GroupMembership_user", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftRegModel", Name="item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new item object.
        /// </summary>
        /// <param name="itemid">Initial value of the itemid property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="source">Initial value of the source property.</param>
        /// <param name="ranking">Initial value of the ranking property.</param>
        /// <param name="quantity">Initial value of the quantity property.</param>
        /// <param name="when">Initial value of the When property.</param>
        public static item Createitem(global::System.Int32 itemid, global::System.Int32 userid, global::System.String description, global::System.String source, global::System.Int32 ranking, global::System.Int32 quantity, global::System.DateTime when)
        {
            item item = new item();
            item.itemid = itemid;
            item.userid = userid;
            item.description = description;
            item.source = source;
            item.ranking = ranking;
            item.quantity = quantity;
            item.When = when;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itemid
        {
            get
            {
                return _itemid;
            }
            set
            {
                if (_itemid != value)
                {
                    OnitemidChanging(value);
                    ReportPropertyChanging("itemid");
                    _itemid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("itemid");
                    OnitemidChanged();
                }
            }
        }
        private global::System.Int32 _itemid;
        partial void OnitemidChanging(global::System.Int32 value);
        partial void OnitemidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _price;
        partial void OnpriceChanging(Nullable<global::System.Decimal> value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String source
        {
            get
            {
                return _source;
            }
            set
            {
                OnsourceChanging(value);
                ReportPropertyChanging("source");
                _source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("source");
                OnsourceChanged();
            }
        }
        private global::System.String _source;
        partial void OnsourceChanging(global::System.String value);
        partial void OnsourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ranking
        {
            get
            {
                return _ranking;
            }
            set
            {
                OnrankingChanging(value);
                ReportPropertyChanging("ranking");
                _ranking = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ranking");
                OnrankingChanged();
            }
        }
        private global::System.Int32 _ranking;
        partial void OnrankingChanging(global::System.Int32 value);
        partial void OnrankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String url
        {
            get
            {
                return _url;
            }
            set
            {
                OnurlChanging(value);
                ReportPropertyChanging("url");
                _url = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("url");
                OnurlChanged();
            }
        }
        private global::System.String _url;
        partial void OnurlChanging(global::System.String value);
        partial void OnurlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> category
        {
            get
            {
                return _category;
            }
            set
            {
                OncategoryChanging(value);
                ReportPropertyChanging("category");
                _category = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("category");
                OncategoryChanged();
            }
        }
        private Nullable<global::System.Int32> _category;
        partial void OncategoryChanging(Nullable<global::System.Int32> value);
        partial void OncategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Int32 _quantity;
        partial void OnquantityChanging(global::System.Int32 value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime When
        {
            get
            {
                return _When;
            }
            set
            {
                OnWhenChanging(value);
                ReportPropertyChanging("When");
                _When = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("When");
                OnWhenChanged();
            }
        }
        private global::System.DateTime _When;
        partial void OnWhenChanging(global::System.DateTime value);
        partial void OnWhenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_items_categories", "category")]
        public category category1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("GiftRegModel.FK_items_categories", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("GiftRegModel.FK_items_categories", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<category> category1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("GiftRegModel.FK_items_categories", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<category>("GiftRegModel.FK_items_categories", "category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_item_user", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_item_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_item_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_item_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("GiftRegModel.FK_item_user", "user", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_items_ranks", "rank")]
        public rank rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rank>("GiftRegModel.FK_items_ranks", "rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rank>("GiftRegModel.FK_items_ranks", "rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rank> rankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<rank>("GiftRegModel.FK_items_ranks", "rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<rank>("GiftRegModel.FK_items_ranks", "rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_Reservation_item", "Reservation")]
        public EntityCollection<Reservation> Reservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("GiftRegModel.FK_Reservation_item", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("GiftRegModel.FK_Reservation_item", "Reservation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftRegModel", Name="rank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new rank object.
        /// </summary>
        /// <param name="rankId">Initial value of the rankId property.</param>
        /// <param name="title">Initial value of the title property.</param>
        /// <param name="rendered">Initial value of the rendered property.</param>
        /// <param name="rankorder">Initial value of the rankorder property.</param>
        public static rank Createrank(global::System.Int32 rankId, global::System.String title, global::System.String rendered, global::System.Int32 rankorder)
        {
            rank rank = new rank();
            rank.rankId = rankId;
            rank.title = title;
            rank.rendered = rendered;
            rank.rankorder = rankorder;
            return rank;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rankId
        {
            get
            {
                return _rankId;
            }
            set
            {
                if (_rankId != value)
                {
                    OnrankIdChanging(value);
                    ReportPropertyChanging("rankId");
                    _rankId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("rankId");
                    OnrankIdChanged();
                }
            }
        }
        private global::System.Int32 _rankId;
        partial void OnrankIdChanging(global::System.Int32 value);
        partial void OnrankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String rendered
        {
            get
            {
                return _rendered;
            }
            set
            {
                OnrenderedChanging(value);
                ReportPropertyChanging("rendered");
                _rendered = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("rendered");
                OnrenderedChanged();
            }
        }
        private global::System.String _rendered;
        partial void OnrenderedChanging(global::System.String value);
        partial void OnrenderedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 rankorder
        {
            get
            {
                return _rankorder;
            }
            set
            {
                OnrankorderChanging(value);
                ReportPropertyChanging("rankorder");
                _rankorder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rankorder");
                OnrankorderChanged();
            }
        }
        private global::System.Int32 _rankorder;
        partial void OnrankorderChanging(global::System.Int32 value);
        partial void OnrankorderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_items_ranks", "item")]
        public EntityCollection<item> items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<item>("GiftRegModel.FK_items_ranks", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<item>("GiftRegModel.FK_items_ranks", "item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftRegModel", Name="Reservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reservation object.
        /// </summary>
        /// <param name="itemid">Initial value of the itemid property.</param>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="when">Initial value of the when property.</param>
        /// <param name="purchased">Initial value of the purchased property.</param>
        /// <param name="reserved">Initial value of the reserved property.</param>
        /// <param name="quantity">Initial value of the quantity property.</param>
        /// <param name="reservationId">Initial value of the reservationId property.</param>
        public static Reservation CreateReservation(global::System.Int32 itemid, global::System.Int32 userid, global::System.DateTime when, global::System.Boolean purchased, global::System.Boolean reserved, global::System.Int32 quantity, global::System.Int32 reservationId)
        {
            Reservation reservation = new Reservation();
            reservation.itemid = itemid;
            reservation.userid = userid;
            reservation.when = when;
            reservation.purchased = purchased;
            reservation.reserved = reserved;
            reservation.quantity = quantity;
            reservation.reservationId = reservationId;
            return reservation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 itemid
        {
            get
            {
                return _itemid;
            }
            set
            {
                OnitemidChanging(value);
                ReportPropertyChanging("itemid");
                _itemid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("itemid");
                OnitemidChanged();
            }
        }
        private global::System.Int32 _itemid;
        partial void OnitemidChanging(global::System.Int32 value);
        partial void OnitemidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                OnuseridChanging(value);
                ReportPropertyChanging("userid");
                _userid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("userid");
                OnuseridChanged();
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime when
        {
            get
            {
                return _when;
            }
            set
            {
                OnwhenChanging(value);
                ReportPropertyChanging("when");
                _when = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("when");
                OnwhenChanged();
            }
        }
        private global::System.DateTime _when;
        partial void OnwhenChanging(global::System.DateTime value);
        partial void OnwhenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean purchased
        {
            get
            {
                return _purchased;
            }
            set
            {
                OnpurchasedChanging(value);
                ReportPropertyChanging("purchased");
                _purchased = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("purchased");
                OnpurchasedChanged();
            }
        }
        private global::System.Boolean _purchased;
        partial void OnpurchasedChanging(global::System.Boolean value);
        partial void OnpurchasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean reserved
        {
            get
            {
                return _reserved;
            }
            set
            {
                OnreservedChanging(value);
                ReportPropertyChanging("reserved");
                _reserved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reserved");
                OnreservedChanged();
            }
        }
        private global::System.Boolean _reserved;
        partial void OnreservedChanging(global::System.Boolean value);
        partial void OnreservedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private global::System.Int32 _quantity;
        partial void OnquantityChanging(global::System.Int32 value);
        partial void OnquantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 reservationId
        {
            get
            {
                return _reservationId;
            }
            set
            {
                if (_reservationId != value)
                {
                    OnreservationIdChanging(value);
                    ReportPropertyChanging("reservationId");
                    _reservationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("reservationId");
                    OnreservationIdChanged();
                }
            }
        }
        private global::System.Int32 _reservationId;
        partial void OnreservationIdChanging(global::System.Int32 value);
        partial void OnreservationIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_Reservation_item", "item")]
        public item item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<item>("GiftRegModel.FK_Reservation_item", "item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<item>("GiftRegModel.FK_Reservation_item", "item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<item> itemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<item>("GiftRegModel.FK_Reservation_item", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<item>("GiftRegModel.FK_Reservation_item", "item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_Reservation_user", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_Reservation_user", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_Reservation_user", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("GiftRegModel.FK_Reservation_user", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("GiftRegModel.FK_Reservation_user", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GiftRegModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="userid">Initial value of the userid property.</param>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="fullname">Initial value of the fullname property.</param>
        /// <param name="email">Initial value of the email property.</param>
        public static user Createuser(global::System.Int32 userid, global::System.String username, global::System.String password, global::System.String fullname, global::System.String email)
        {
            user user = new user();
            user.userid = userid;
            user.username = username;
            user.password = password;
            user.fullname = fullname;
            user.email = email;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 userid
        {
            get
            {
                return _userid;
            }
            set
            {
                if (_userid != value)
                {
                    OnuseridChanging(value);
                    ReportPropertyChanging("userid");
                    _userid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("userid");
                    OnuseridChanged();
                }
            }
        }
        private global::System.Int32 _userid;
        partial void OnuseridChanging(global::System.Int32 value);
        partial void OnuseridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String fullname
        {
            get
            {
                return _fullname;
            }
            set
            {
                OnfullnameChanging(value);
                ReportPropertyChanging("fullname");
                _fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("fullname");
                OnfullnameChanged();
            }
        }
        private global::System.String _fullname;
        partial void OnfullnameChanging(global::System.String value);
        partial void OnfullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String comment
        {
            get
            {
                return _comment;
            }
            set
            {
                OncommentChanging(value);
                ReportPropertyChanging("comment");
                _comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("comment");
                OncommentChanged();
            }
        }
        private global::System.String _comment;
        partial void OncommentChanging(global::System.String value);
        partial void OncommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> list_stamp
        {
            get
            {
                return _list_stamp;
            }
            set
            {
                Onlist_stampChanging(value);
                ReportPropertyChanging("list_stamp");
                _list_stamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("list_stamp");
                Onlist_stampChanged();
            }
        }
        private Nullable<global::System.DateTime> _list_stamp;
        partial void Onlist_stampChanging(Nullable<global::System.DateTime> value);
        partial void Onlist_stampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birthday
        {
            get
            {
                return _birthday;
            }
            set
            {
                OnbirthdayChanging(value);
                ReportPropertyChanging("birthday");
                _birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birthday");
                OnbirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _birthday;
        partial void OnbirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnbirthdayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_Group_user", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("GiftRegModel.FK_Group_user", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("GiftRegModel.FK_Group_user", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_GroupMembership_user", "GroupMembership")]
        public EntityCollection<GroupMembership> GroupMemberships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMembership>("GiftRegModel.FK_GroupMembership_user", "GroupMembership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMembership>("GiftRegModel.FK_GroupMembership_user", "GroupMembership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_item_user", "item")]
        public EntityCollection<item> items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<item>("GiftRegModel.FK_item_user", "item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<item>("GiftRegModel.FK_item_user", "item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GiftRegModel", "FK_Reservation_user", "Reservation")]
        public EntityCollection<Reservation> Reservations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reservation>("GiftRegModel.FK_Reservation_user", "Reservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reservation>("GiftRegModel.FK_Reservation_user", "Reservation", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
